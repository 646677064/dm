set(CMAKE_C_FLAGS "-std=c99 -O3 -pipe -Wall -Wextra -Wno-strict-aliasing -Wno-unused-but-set-variable")
#lib mtrace
SET(LIBMTRACE_SRC mtrace.c)
ADD_LIBRARY(mtrace_static STATIC ${LIBMTRACE_SRC})
SET_TARGET_PROPERTIES(mtrace_static PROPERTIES OUTPUT_NAME "mtrace")
SET_TARGET_PROPERTIES(mtrace_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS mtrace_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
INSTALL(FILES mtrace.h fn_type.h DESTINATION include)
TARGET_LINK_LIBRARIES(mtrace_static rbtree_static)

#lib queue
SET(LIBqueue_SRC queue.c)
ADD_LIBRARY(queue_static STATIC ${LIBqueue_SRC})
SET_TARGET_PROPERTIES(queue_static PROPERTIES OUTPUT_NAME "queue")
SET_TARGET_PROPERTIES(queue_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS queue_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
INSTALL(FILES queue.h DESTINATION include)

#lib str
SET(LIBstr_SRC str.c)
ADD_LIBRARY(str_static STATIC ${LIBstr_SRC})
SET_TARGET_PROPERTIES(str_static PROPERTIES OUTPUT_NAME "str")
SET_TARGET_PROPERTIES(str_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS str_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
INSTALL(FILES str.h DESTINATION include)

#lib heap
SET(LIBheap_SRC heap.c)
ADD_LIBRARY(heap_static STATIC ${LIBheap_SRC})
SET_TARGET_PROPERTIES(heap_static PROPERTIES OUTPUT_NAME "heap")
SET_TARGET_PROPERTIES(heap_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS heap_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
INSTALL(FILES heap.h DESTINATION include)

#lib fptree
SET(LIBfptree_SRC fptree.c)
ADD_LIBRARY(fptree_static STATIC ${LIBfptree_SRC})
SET_TARGET_PROPERTIES(fptree_static PROPERTIES OUTPUT_NAME "fptree")
SET_TARGET_PROPERTIES(fptree_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS fptree_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
INSTALL(FILES fptree.h DESTINATION include)
TARGET_LINK_LIBRARIES(fptree_static hashtable_static)

#lib hashtable
SET(LIBhashtable_SRC hashtable.c)
ADD_LIBRARY(hashtable_static STATIC ${LIBhashtable_SRC})
SET_TARGET_PROPERTIES(hashtable_static PROPERTIES OUTPUT_NAME "hashtable")
SET_TARGET_PROPERTIES(hashtable_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS hashtable_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
INSTALL(FILES hashtable.h DESTINATION include)
TARGET_LINK_LIBRARIES(hashtable_static str_static)

#lib md5
SET(LIBmd5_SRC md5.c)
ADD_LIBRARY(md5_static STATIC ${LIBmd5_SRC})
SET_TARGET_PROPERTIES(md5_static PROPERTIES OUTPUT_NAME "md5")
SET_TARGET_PROPERTIES(md5_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS md5_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
INSTALL(FILES md5.h DESTINATION include)

#lib rbtree
SET(LIBrbtree_SRC rbtree.c)
ADD_LIBRARY(rbtree_static STATIC ${LIBrbtree_SRC})
SET_TARGET_PROPERTIES(rbtree_static PROPERTIES OUTPUT_NAME "rbtree")
SET_TARGET_PROPERTIES(rbtree_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS rbtree_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
INSTALL(FILES rbtree.h DESTINATION include)

#lib set
SET(LIBset_SRC set.c)
ADD_LIBRARY(set_static STATIC ${LIBset_SRC})
SET_TARGET_PROPERTIES(set_static PROPERTIES OUTPUT_NAME "set")
SET_TARGET_PROPERTIES(set_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS set_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
INSTALL(FILES set.h DESTINATION include)
TARGET_LINK_LIBRARIES(set_static rbtree_static)

#lib idmap
SET(LIBidmap_SRC idmap.c)
ADD_LIBRARY(idmap_static STATIC ${LIBidmap_SRC})
SET_TARGET_PROPERTIES(idmap_static PROPERTIES OUTPUT_NAME "idmap")
SET_TARGET_PROPERTIES(idmap_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS idmap_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
INSTALL(FILES idmap.h DESTINATION include)
TARGET_LINK_LIBRARIES(idmap_static set_static)
